{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "storageName": {
        "type": "string",
        "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Provide a unique name for the Storage account."
        }
      },
      "eventSubName": {
        "type": "string",
        "defaultValue": "routerSubscription",
        "metadata": {
          "description": "Provide a name for the Event Grid subscription."
        }
      },
      "azureCommunicationServicesResourceName": {
        "type": "String",
        "metadata": {
          "description": "Name of your Azure Communication Services resource."
        }
      },
      "systemTopicName": {
        "type": "String",
        "metadata": {
          "description": "Name of the system topic.  If you have an existing topic, find it under 'Events' in your Azure Communication Services resource, otherwise specify a unique name"
        }
      },
      "queueName": {
        "type": "String",
        "defaultValue": "router-events",
        "metadata": {
          "description": "Provide a name for the queue."
        }
      }
    },
    "variables": {
      "queueId": "[concat(parameters('storageName'), '/default/', parameters('queueName'))]"
    },
    "resources": [
  
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[parameters('storageName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {
          "accessTier": "Hot"
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/queueServices",
        "apiVersion": "2021-06-01",
        "name": "[concat(parameters('storageName'), '/default')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
        ],
        "properties": {
          "cors": {
            "corsRules": []
          }
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
        "apiVersion": "2021-06-01",
        "name": "[variables('queueId')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageName'), 'default')]",
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
        ]
      },
      {
        "type": "Microsoft.EventGrid/systemTopics",
        "apiVersion": "2021-06-01-preview",
        "name": "[parameters('systemTopicName')]",
        "location": "global",
        "properties": {
          "source": "[resourceId('Microsoft.Communication/CommunicationServices', parameters('azureCommunicationServicesResourceName'))]",
          "topicType": "Microsoft.Communication.CommunicationServices"
        }
      },
      {
        "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
        "apiVersion": "2021-06-01-preview",
        "name": "[concat(parameters('systemTopicName'), '/', parameters('eventSubName'))]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageName'), 'default')]",
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
          "[resourceId('Microsoft.EventGrid/systemTopics', parameters('systemTopicName'))]"
        ],
        "properties": {
          "destination": {
            "endpointType": "StorageQueue",
            "properties": {
              "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
              "queueName": "[parameters('queueName')]"
            }
          },
          "eventDeliverySchema": "EventGridSchema",
          "filter": {
            "includedEventTypes": [
              "Microsoft.Communication.RouterJobReceived",
              "Microsoft.Communication.RouterJobClassified",
              "Microsoft.Communication.RouterJobQueued",
              "Microsoft.Communication.RouterJobClassificationFailed",
              "Microsoft.Communication.RouterJobWorkerSelectorsExpired",
              "Microsoft.Communication.RouterJobCompleted",
              "Microsoft.Communication.RouterJobClosed",
              "Microsoft.Communication.RouterJobCancelled",
              "Microsoft.Communication.RouterJobExceptionTriggered",
              "Microsoft.Communication.RouterWorkerOfferIssued",
              "Microsoft.Communication.RouterWorkerOfferAccepted",
              "Microsoft.Communication.RouterWorkerOfferDeclined",
              "Microsoft.Communication.RouterWorkerOfferRevoked",
              "Microsoft.Communication.RouterWorkerOfferExpired",
              "Microsoft.Communication.RouterWorkerRegistered",
              "Microsoft.Communication.RouterWorkerDeregistered"
            ]
          }
        }
      }
    ],
    "outputs": {
    }
  }